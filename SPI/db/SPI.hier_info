|SPI
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => ~NO_FANOUT~
HEX0[0] <= <GND>
HEX0[1] <= <GND>
HEX0[2] <= <GND>
HEX0[3] <= <GND>
HEX0[4] <= <GND>
HEX0[5] <= <GND>
HEX0[6] <= <GND>
HEX1[0] <= <GND>
HEX1[1] <= <GND>
HEX1[2] <= <GND>
HEX1[3] <= <GND>
HEX1[4] <= <GND>
HEX1[5] <= <GND>
HEX1[6] <= <GND>
HEX2[0] <= <GND>
HEX2[1] <= <GND>
HEX2[2] <= <GND>
HEX2[3] <= <GND>
HEX2[4] <= <GND>
HEX2[5] <= <GND>
HEX2[6] <= <GND>
HEX3[0] <= <GND>
HEX3[1] <= <GND>
HEX3[2] <= <GND>
HEX3[3] <= <GND>
HEX3[4] <= <GND>
HEX3[5] <= <GND>
HEX3[6] <= <GND>
HEX4[0] <= <GND>
HEX4[1] <= <GND>
HEX4[2] <= <GND>
HEX4[3] <= <GND>
HEX4[4] <= <GND>
HEX4[5] <= <GND>
HEX4[6] <= <GND>
HEX5[0] <= <GND>
HEX5[1] <= <GND>
HEX5[2] <= <GND>
HEX5[3] <= <GND>
HEX5[4] <= <GND>
HEX5[5] <= <GND>
HEX5[6] <= <GND>
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
GPIO[0] <> <UNC>
GPIO[2] <> <UNC>
GPIO[4] <> <UNC>
GPIO[6] <> <UNC>
GPIO[7] <> GPIO[7]
GPIO[8] <> <UNC>
GPIO[9] <> <UNC>
GPIO[10] <> <UNC>
GPIO[11] <> <UNC>
GPIO[12] <> <UNC>
GPIO[13] <> <UNC>
GPIO[14] <> <UNC>
GPIO[15] <> <UNC>
GPIO[16] <> <UNC>
GPIO[17] <> <UNC>
GPIO[18] <> <UNC>
GPIO[19] <> <UNC>
GPIO[20] <> <UNC>
GPIO[21] <> <UNC>
GPIO[22] <> <UNC>
GPIO[23] <> <UNC>
GPIO[24] <> <UNC>
GPIO[25] <> <UNC>
GPIO[26] <> <UNC>
GPIO[27] <> <UNC>
GPIO[28] <> <UNC>
GPIO[29] <> <UNC>
GPIO[30] <> <UNC>
GPIO[31] <> <UNC>
GPIO[32] <> <UNC>
GPIO[33] <> <UNC>
GPIO[34] <> <UNC>
GPIO[35] <> <UNC>


|SPI|Counter:count_n_freq
aclr => aclr.IN1
aload => aload.IN1
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
sclr => sclr.IN1
cout <= lpm_counter:LPM_COUNTER_component.cout
q[0] <= lpm_counter:LPM_COUNTER_component.q
q[1] <= lpm_counter:LPM_COUNTER_component.q
q[2] <= lpm_counter:LPM_COUNTER_component.q
q[3] <= lpm_counter:LPM_COUNTER_component.q


|SPI|Counter:count_n_freq|lpm_counter:LPM_COUNTER_component
clock => cntr_n7l:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => cntr_n7l:auto_generated.aclr
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => cntr_n7l:auto_generated.aload
sclr => cntr_n7l:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => cntr_n7l:auto_generated.data[0]
data[1] => cntr_n7l:auto_generated.data[1]
data[2] => cntr_n7l:auto_generated.data[2]
data[3] => cntr_n7l:auto_generated.data[3]
cin => ~NO_FANOUT~
q[0] <= cntr_n7l:auto_generated.q[0]
q[1] <= cntr_n7l:auto_generated.q[1]
q[2] <= cntr_n7l:auto_generated.q[2]
q[3] <= cntr_n7l:auto_generated.q[3]
cout <= cntr_n7l:auto_generated.cout
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|SPI|Counter:count_n_freq|lpm_counter:LPM_COUNTER_component|cntr_n7l:auto_generated
aclr => aclr_actual.IN0
aclr => latch_signal[3].IN0
aclr => latch_signal[2].IN0
aclr => latch_signal[1].IN0
aclr => latch_signal[0].IN0
aclr => safe_q[3].IN0
aload => mux211_dataout.IN0
aload => _.IN0
aload => mux213_dataout.IN0
aload => _.IN0
aload => mux215_dataout.IN0
aload => _.IN0
aload => mux217_dataout.IN0
aload => _.IN0
aload => aclr_actual.IN1
aload => _.IN0
aload => _.IN0
aload => _.IN0
aload => _.IN0
aload => _.IN0
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cout <= cout_actual.DB_MAX_OUTPUT_PORT_TYPE
data[0] => _.IN1
data[0] => _.IN0
data[0] => _.IN1
data[1] => _.IN1
data[1] => _.IN0
data[1] => _.IN1
data[2] => _.IN1
data[2] => _.IN0
data[2] => _.IN1
data[3] => _.IN1
data[3] => _.IN0
data[3] => _.IN1
q[0] <= safe_q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= safe_q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= safe_q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= safe_q[3].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0


|SPI|Counter:count_n_freq|lpm_counter:LPM_COUNTER_component|cntr_n7l:auto_generated|cmpr_c9c:cmpr9
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1


|SPI|spi_slave:spi
rstb => treg[0].PRESET
rstb => treg[1].PRESET
rstb => treg[2].PRESET
rstb => treg[3].PRESET
rstb => treg[4].PRESET
rstb => treg[5].PRESET
rstb => treg[6].PRESET
rstb => treg[7].PRESET
rstb => done.IN0
rstb => rreg[3].IN0
rstb => nb[0].IN0
rstb => nb[3].IN0
ten => sdout.IN0
tdata[0] => treg.DATAB
tdata[1] => treg.DATAB
tdata[2] => treg.DATAB
tdata[3] => treg.DATAB
tdata[4] => treg.DATAB
tdata[5] => treg.DATAB
tdata[6] => treg.DATAB
tdata[7] => treg.DATAB
mlb => sout.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => rreg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
mlb => treg.OUTPUTSELECT
ss => nb[0].IN1
ss => nb[3].IN1
ss => sdout.IN1
ss => done.IN1
ss => rreg[3].IN1
ss => rreg[2].ENA
ss => rreg[4].ENA
ss => rreg[5].ENA
ss => rreg[6].ENA
ss => rreg[7].ENA
ss => treg[0].ENA
ss => rreg[3].ENA
ss => done~reg0.ENA
ss => treg[7].ENA
ss => treg[6].ENA
ss => treg[5].ENA
ss => treg[4].ENA
ss => treg[3].ENA
ss => treg[2].ENA
ss => treg[1].ENA
ss => rreg[1].ENA
ss => rreg[0].ENA
ss => rdata[7]~reg0.ENA
ss => rdata[6]~reg0.ENA
ss => rdata[5]~reg0.ENA
ss => rdata[4]~reg0.ENA
ss => rdata[3]~reg0.ENA
ss => rdata[2]~reg0.ENA
ss => rdata[1]~reg0.ENA
ss => rdata[0]~reg0.ENA
sck => treg[0].CLK
sck => treg[1].CLK
sck => treg[2].CLK
sck => treg[3].CLK
sck => treg[4].CLK
sck => treg[5].CLK
sck => treg[6].CLK
sck => treg[7].CLK
sck => done~reg0.CLK
sck => rdata[0]~reg0.CLK
sck => rdata[1]~reg0.CLK
sck => rdata[2]~reg0.CLK
sck => rdata[3]~reg0.CLK
sck => rdata[4]~reg0.CLK
sck => rdata[5]~reg0.CLK
sck => rdata[6]~reg0.CLK
sck => rdata[7]~reg0.CLK
sck => rreg[0].CLK
sck => rreg[1].CLK
sck => rreg[2].CLK
sck => rreg[3].CLK
sck => rreg[4].CLK
sck => rreg[5].CLK
sck => rreg[6].CLK
sck => rreg[7].CLK
sck => nb[0].CLK
sck => nb[1].CLK
sck => nb[2].CLK
sck => nb[3].CLK
sdin => rreg.DATAB
sdin => rreg.DATAA
sdout <= sdout.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[0] <= rdata[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[1] <= rdata[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[2] <= rdata[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[3] <= rdata[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[4] <= rdata[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[5] <= rdata[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[6] <= rdata[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rdata[7] <= rdata[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


