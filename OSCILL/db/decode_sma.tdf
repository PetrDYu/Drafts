--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode8300w[2..0]	: WIRE;
	w_anode8313w[3..0]	: WIRE;
	w_anode8330w[3..0]	: WIRE;
	w_anode8340w[3..0]	: WIRE;
	w_anode8350w[3..0]	: WIRE;
	w_anode8360w[3..0]	: WIRE;
	w_anode8370w[3..0]	: WIRE;
	w_anode8380w[3..0]	: WIRE;
	w_anode8390w[3..0]	: WIRE;
	w_anode8402w[2..0]	: WIRE;
	w_anode8411w[3..0]	: WIRE;
	w_anode8422w[3..0]	: WIRE;
	w_anode8432w[3..0]	: WIRE;
	w_anode8442w[3..0]	: WIRE;
	w_anode8452w[3..0]	: WIRE;
	w_anode8462w[3..0]	: WIRE;
	w_anode8472w[3..0]	: WIRE;
	w_anode8482w[3..0]	: WIRE;
	w_anode8493w[2..0]	: WIRE;
	w_anode8502w[3..0]	: WIRE;
	w_anode8513w[3..0]	: WIRE;
	w_anode8523w[3..0]	: WIRE;
	w_anode8533w[3..0]	: WIRE;
	w_anode8543w[3..0]	: WIRE;
	w_anode8553w[3..0]	: WIRE;
	w_anode8563w[3..0]	: WIRE;
	w_anode8573w[3..0]	: WIRE;
	w_anode8584w[2..0]	: WIRE;
	w_anode8593w[3..0]	: WIRE;
	w_anode8604w[3..0]	: WIRE;
	w_anode8614w[3..0]	: WIRE;
	w_anode8624w[3..0]	: WIRE;
	w_anode8634w[3..0]	: WIRE;
	w_anode8644w[3..0]	: WIRE;
	w_anode8654w[3..0]	: WIRE;
	w_anode8664w[3..0]	: WIRE;
	w_data8298w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode8664w[3..3], w_anode8654w[3..3], w_anode8644w[3..3], w_anode8634w[3..3], w_anode8624w[3..3], w_anode8614w[3..3], w_anode8604w[3..3], w_anode8593w[3..3]), ( w_anode8573w[3..3], w_anode8563w[3..3], w_anode8553w[3..3], w_anode8543w[3..3], w_anode8533w[3..3], w_anode8523w[3..3], w_anode8513w[3..3], w_anode8502w[3..3]), ( w_anode8482w[3..3], w_anode8472w[3..3], w_anode8462w[3..3], w_anode8452w[3..3], w_anode8442w[3..3], w_anode8432w[3..3], w_anode8422w[3..3], w_anode8411w[3..3]), ( w_anode8390w[3..3], w_anode8380w[3..3], w_anode8370w[3..3], w_anode8360w[3..3], w_anode8350w[3..3], w_anode8340w[3..3], w_anode8330w[3..3], w_anode8313w[3..3]));
	w_anode8300w[] = ( (w_anode8300w[1..1] & (! data_wire[4..4])), (w_anode8300w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8313w[] = ( (w_anode8313w[2..2] & (! w_data8298w[2..2])), (w_anode8313w[1..1] & (! w_data8298w[1..1])), (w_anode8313w[0..0] & (! w_data8298w[0..0])), w_anode8300w[2..2]);
	w_anode8330w[] = ( (w_anode8330w[2..2] & (! w_data8298w[2..2])), (w_anode8330w[1..1] & (! w_data8298w[1..1])), (w_anode8330w[0..0] & w_data8298w[0..0]), w_anode8300w[2..2]);
	w_anode8340w[] = ( (w_anode8340w[2..2] & (! w_data8298w[2..2])), (w_anode8340w[1..1] & w_data8298w[1..1]), (w_anode8340w[0..0] & (! w_data8298w[0..0])), w_anode8300w[2..2]);
	w_anode8350w[] = ( (w_anode8350w[2..2] & (! w_data8298w[2..2])), (w_anode8350w[1..1] & w_data8298w[1..1]), (w_anode8350w[0..0] & w_data8298w[0..0]), w_anode8300w[2..2]);
	w_anode8360w[] = ( (w_anode8360w[2..2] & w_data8298w[2..2]), (w_anode8360w[1..1] & (! w_data8298w[1..1])), (w_anode8360w[0..0] & (! w_data8298w[0..0])), w_anode8300w[2..2]);
	w_anode8370w[] = ( (w_anode8370w[2..2] & w_data8298w[2..2]), (w_anode8370w[1..1] & (! w_data8298w[1..1])), (w_anode8370w[0..0] & w_data8298w[0..0]), w_anode8300w[2..2]);
	w_anode8380w[] = ( (w_anode8380w[2..2] & w_data8298w[2..2]), (w_anode8380w[1..1] & w_data8298w[1..1]), (w_anode8380w[0..0] & (! w_data8298w[0..0])), w_anode8300w[2..2]);
	w_anode8390w[] = ( (w_anode8390w[2..2] & w_data8298w[2..2]), (w_anode8390w[1..1] & w_data8298w[1..1]), (w_anode8390w[0..0] & w_data8298w[0..0]), w_anode8300w[2..2]);
	w_anode8402w[] = ( (w_anode8402w[1..1] & (! data_wire[4..4])), (w_anode8402w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8411w[] = ( (w_anode8411w[2..2] & (! w_data8298w[2..2])), (w_anode8411w[1..1] & (! w_data8298w[1..1])), (w_anode8411w[0..0] & (! w_data8298w[0..0])), w_anode8402w[2..2]);
	w_anode8422w[] = ( (w_anode8422w[2..2] & (! w_data8298w[2..2])), (w_anode8422w[1..1] & (! w_data8298w[1..1])), (w_anode8422w[0..0] & w_data8298w[0..0]), w_anode8402w[2..2]);
	w_anode8432w[] = ( (w_anode8432w[2..2] & (! w_data8298w[2..2])), (w_anode8432w[1..1] & w_data8298w[1..1]), (w_anode8432w[0..0] & (! w_data8298w[0..0])), w_anode8402w[2..2]);
	w_anode8442w[] = ( (w_anode8442w[2..2] & (! w_data8298w[2..2])), (w_anode8442w[1..1] & w_data8298w[1..1]), (w_anode8442w[0..0] & w_data8298w[0..0]), w_anode8402w[2..2]);
	w_anode8452w[] = ( (w_anode8452w[2..2] & w_data8298w[2..2]), (w_anode8452w[1..1] & (! w_data8298w[1..1])), (w_anode8452w[0..0] & (! w_data8298w[0..0])), w_anode8402w[2..2]);
	w_anode8462w[] = ( (w_anode8462w[2..2] & w_data8298w[2..2]), (w_anode8462w[1..1] & (! w_data8298w[1..1])), (w_anode8462w[0..0] & w_data8298w[0..0]), w_anode8402w[2..2]);
	w_anode8472w[] = ( (w_anode8472w[2..2] & w_data8298w[2..2]), (w_anode8472w[1..1] & w_data8298w[1..1]), (w_anode8472w[0..0] & (! w_data8298w[0..0])), w_anode8402w[2..2]);
	w_anode8482w[] = ( (w_anode8482w[2..2] & w_data8298w[2..2]), (w_anode8482w[1..1] & w_data8298w[1..1]), (w_anode8482w[0..0] & w_data8298w[0..0]), w_anode8402w[2..2]);
	w_anode8493w[] = ( (w_anode8493w[1..1] & data_wire[4..4]), (w_anode8493w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode8502w[] = ( (w_anode8502w[2..2] & (! w_data8298w[2..2])), (w_anode8502w[1..1] & (! w_data8298w[1..1])), (w_anode8502w[0..0] & (! w_data8298w[0..0])), w_anode8493w[2..2]);
	w_anode8513w[] = ( (w_anode8513w[2..2] & (! w_data8298w[2..2])), (w_anode8513w[1..1] & (! w_data8298w[1..1])), (w_anode8513w[0..0] & w_data8298w[0..0]), w_anode8493w[2..2]);
	w_anode8523w[] = ( (w_anode8523w[2..2] & (! w_data8298w[2..2])), (w_anode8523w[1..1] & w_data8298w[1..1]), (w_anode8523w[0..0] & (! w_data8298w[0..0])), w_anode8493w[2..2]);
	w_anode8533w[] = ( (w_anode8533w[2..2] & (! w_data8298w[2..2])), (w_anode8533w[1..1] & w_data8298w[1..1]), (w_anode8533w[0..0] & w_data8298w[0..0]), w_anode8493w[2..2]);
	w_anode8543w[] = ( (w_anode8543w[2..2] & w_data8298w[2..2]), (w_anode8543w[1..1] & (! w_data8298w[1..1])), (w_anode8543w[0..0] & (! w_data8298w[0..0])), w_anode8493w[2..2]);
	w_anode8553w[] = ( (w_anode8553w[2..2] & w_data8298w[2..2]), (w_anode8553w[1..1] & (! w_data8298w[1..1])), (w_anode8553w[0..0] & w_data8298w[0..0]), w_anode8493w[2..2]);
	w_anode8563w[] = ( (w_anode8563w[2..2] & w_data8298w[2..2]), (w_anode8563w[1..1] & w_data8298w[1..1]), (w_anode8563w[0..0] & (! w_data8298w[0..0])), w_anode8493w[2..2]);
	w_anode8573w[] = ( (w_anode8573w[2..2] & w_data8298w[2..2]), (w_anode8573w[1..1] & w_data8298w[1..1]), (w_anode8573w[0..0] & w_data8298w[0..0]), w_anode8493w[2..2]);
	w_anode8584w[] = ( (w_anode8584w[1..1] & data_wire[4..4]), (w_anode8584w[0..0] & data_wire[3..3]), enable_wire);
	w_anode8593w[] = ( (w_anode8593w[2..2] & (! w_data8298w[2..2])), (w_anode8593w[1..1] & (! w_data8298w[1..1])), (w_anode8593w[0..0] & (! w_data8298w[0..0])), w_anode8584w[2..2]);
	w_anode8604w[] = ( (w_anode8604w[2..2] & (! w_data8298w[2..2])), (w_anode8604w[1..1] & (! w_data8298w[1..1])), (w_anode8604w[0..0] & w_data8298w[0..0]), w_anode8584w[2..2]);
	w_anode8614w[] = ( (w_anode8614w[2..2] & (! w_data8298w[2..2])), (w_anode8614w[1..1] & w_data8298w[1..1]), (w_anode8614w[0..0] & (! w_data8298w[0..0])), w_anode8584w[2..2]);
	w_anode8624w[] = ( (w_anode8624w[2..2] & (! w_data8298w[2..2])), (w_anode8624w[1..1] & w_data8298w[1..1]), (w_anode8624w[0..0] & w_data8298w[0..0]), w_anode8584w[2..2]);
	w_anode8634w[] = ( (w_anode8634w[2..2] & w_data8298w[2..2]), (w_anode8634w[1..1] & (! w_data8298w[1..1])), (w_anode8634w[0..0] & (! w_data8298w[0..0])), w_anode8584w[2..2]);
	w_anode8644w[] = ( (w_anode8644w[2..2] & w_data8298w[2..2]), (w_anode8644w[1..1] & (! w_data8298w[1..1])), (w_anode8644w[0..0] & w_data8298w[0..0]), w_anode8584w[2..2]);
	w_anode8654w[] = ( (w_anode8654w[2..2] & w_data8298w[2..2]), (w_anode8654w[1..1] & w_data8298w[1..1]), (w_anode8654w[0..0] & (! w_data8298w[0..0])), w_anode8584w[2..2]);
	w_anode8664w[] = ( (w_anode8664w[2..2] & w_data8298w[2..2]), (w_anode8664w[1..1] & w_data8298w[1..1]), (w_anode8664w[0..0] & w_data8298w[0..0]), w_anode8584w[2..2]);
	w_data8298w[2..0] = data_wire[2..0];
END;
--VALID FILE
